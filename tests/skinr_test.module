<?php

/**
 * @file
 * Skinr testing module.
 *
 * Other modules should be able to place their Skinr support/integration code
 * into a conditionally loaded $module.skinr.inc file, so this .module file
 * only exists, because Drupal requires a .module file to exist.
 */

/**
 * Implements hook_system_theme_info().
 *
 * @see http://drupal.org/node/953336
 */
function skinr_test_system_theme_info() {
  $path = drupal_get_path('module', 'skinr_test');
  $test_themes = array('basetheme', 'subtheme', 'basetheme_other', 'subtheme_other');
  foreach ($test_themes as $theme) {
    $themes["skinr_test_{$theme}"] = $path . "/themes/skinr_test_{$theme}/skinr_test_{$theme}.info";
  }
  return $themes;
}

//
// Presave hooks
//

/**
 * Implements hook_entity_presave().
 */
function skinr_test_entity_presave($entity, $type) {
  $_SESSION['skinr_test'][] = (__FUNCTION__ . ' called for type ' . $type);
}

/**
 * Implements hook_skinr_skin_presave().
 */
function skinr_test_skinr_skin_presave() {
  $_SESSION['skinr_test'][] = (__FUNCTION__ . ' called');
}

//
// Insert hooks
//

/**
 * Implements hook_entity_insert().
 */
function skinr_test_entity_insert($entity, $type) {
  $_SESSION['skinr_test'][] = (__FUNCTION__ . ' called for type ' . $type);
}

/**
 * Implements hook_skinr_skin_insert().
 */
function skinr_test_skinr_skin_insert() {
  $_SESSION['skinr_test'][] = (__FUNCTION__ . ' called');
}

//
// Load hooks
//

/**
 * Implements hook_entity_load().
 */
function skinr_test_entity_load(array $entities, $type) {
  $_SESSION['skinr_test'][] = (__FUNCTION__ . ' called for type ' . $type);
}

/**
 * Implements hook_skinr_skin_load().
 */
function skinr_test_skinr_skin_load() {
  $_SESSION['skinr_test'][] = (__FUNCTION__ . ' called');
}

//
// Update hooks
//

/**
 * Implements hook_entity_update().
 */
function skinr_test_entity_update($entity, $type) {
  $_SESSION['skinr_test'][] = (__FUNCTION__ . ' called for type ' . $type);
}

/**
 * Implements hook_skinr_skin_update().
 */
function skinr_test_skinr_skin_update() {
  $_SESSION['skinr_test'][] = (__FUNCTION__ . ' called');
}

//
// Delete hooks
//

/**
 * Implements hook_entity_delete().
 */
function skinr_test_entity_delete($entity, $type) {
  $_SESSION['skinr_test'][] = (__FUNCTION__ . ' called for type ' . $type);
}

/**
 * Implements hook_skinr_skin_delete().
 */
function skinr_test_skinr_skin_delete() {
  $_SESSION['skinr_test'][] = (__FUNCTION__ . ' called');
}
